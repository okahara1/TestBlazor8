@page "/login"
@layout LoginLayout
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider
@inject HttpClient Http
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@using TestBlazor8.Shared.Models

<PageTitle>Login</PageTitle>

<h1 class="h2 font-weight-normal login-title">
    Warehouse Management System
</h1>

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="loginParameters">
    <DataAnnotationsValidator />
<!--
    <h4 class="font-weight-normal text-center">ログイン</h4>
-->
    <label for="inputUsername" class="sr-only">ユーザー名</label>
    <InputText id="inputUsername" class="form-control" @bind-Value="loginParameters.UserName" autofocus placeholder="ユーザー名" />
    <ValidationMessage For="@(() => loginParameters.UserName)" />

    <label for="inputPassword" class="sr-only">パスワード</label>
    <InputText type="password" id="inputPassword" class="form-control" @bind-Value="loginParameters.Password" placeholder="パスワード" />
    <ValidationMessage For="@(() => loginParameters.Password)" />
<!--
    <div class="form-check m-3">
        <InputCheckbox id="inputRememberMe" class="form-check-input" @bind-Value="@loginParameters.RememberMe" />
        <label class="form-check-label" for="inputRememberMe">Remember Me</label>
    </div>
-->
    <button class="btn btn-lg btn-primary btn-block" type="submit">ログイン</button>

    <label class="text-danger">@error</label>
    <NavLink href="register">
        <h6 class="font-weight-normal text-center">ユーザー登録</h6>
    </NavLink>
</EditForm>

@code{
    LoginParameters loginParameters { get; set; } = new LoginParameters();
    string error { get; set; }
    private RoleInfo[] roles;

    async Task OnSubmit()
    {
        error = null;

        try
        {
            await authStateProvider.Login(loginParameters);

            // ユーザー詳細情報を取得
            //roleInfo = await Http.GetFromJsonAsync<List<RoleInfo>>("api/Role/GetRoleInfoList", @loginParameters.UserName);
            //var result = await Http.GetFromJsonAsync<List<RoleInfo>>("api/Role/GetRoleInfoList");
            await sessionStorage.ClearAsync();  //　初期化
            roles = await Http.GetFromJsonAsync<RoleInfo[]>("api/Role/GetRoleInfoList?id=" + @loginParameters.UserName);
            await sessionStorage.SetItemAsync("RoleId", roles[0].Id);

            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }


    }
}